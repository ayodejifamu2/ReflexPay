// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using reflex.Persistence.Data;

#nullable disable

namespace reflex.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("reflex.Domain.Customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("addressCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("addressUpdateCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("addressUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("customerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("customerCountryId")
                        .HasColumnType("int");

                    b.Property<string>("customerPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("customerSex")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("customerStateId")
                        .HasColumnType("int");

                    b.Property<string>("emailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("emailVerifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("failedLoginAttempt")
                        .HasColumnType("int");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("isAccountLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("isEmailVerified")
                        .HasColumnType("bit");

                    b.Property<bool>("isLPinSet")
                        .HasColumnType("bit");

                    b.Property<bool>("isLoggedIn")
                        .HasColumnType("bit");

                    b.Property<bool>("isPasswordSet")
                        .HasColumnType("bit");

                    b.Property<bool>("isPhoneNumVerified")
                        .HasColumnType("bit");

                    b.Property<bool>("isTPinSet")
                        .HasColumnType("bit");

                    b.Property<DateTime>("lastLogin")
                        .HasColumnType("datetime2");

                    b.Property<int>("lastLoginType")
                        .HasColumnType("int");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("loginPin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("loginPinBlocked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("loginPinBlockedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("loginPinCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("loginPinUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("passwordCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("passwordUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("phoneNumVerifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("transactionPin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("transactionPinBlocked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("transactionPinBlockedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("transactionPinCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("transactionPinUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("userPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("wrongLPinCount")
                        .HasColumnType("int");

                    b.Property<int>("wrongTPinCount")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("customerPhoneNumber")
                        .IsUnique();

                    b.HasIndex("id")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("reflex.Domain.Entities.CardInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("EncrypytedCardinfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("reflex.Domain.Otp", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("otp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("otpType")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Otps");
                });
#pragma warning restore 612, 618
        }
    }
}
